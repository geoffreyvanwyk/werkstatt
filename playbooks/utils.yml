# This file is part of Werkstatt.
#
# Werkstatt is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Werkstatt is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Werkstatt. If not, see <https://www.gnu.org/licenses/>.

##
# Ansible playbook that installs utilities, programmes that make it easier to
# use the operating system.
#
# @author     Geoffrey Bernardo van Wyk <geoffrey@vanwyk.biz>
# @copyright  2024 Geoffrey Bernardo van Wyk {@link https://geoffreyvanwyk.dev}
# @license    {@link http://www.gnu.org/copyleft/gpl.html} GNU GPL v3 or later
###
---
- name: Utility Programmes
  hosts: all

  tasks:
    ##
    # eza is a modern, maintained replacement for ls
    #
    # @see  {@link https://eza.rocks}
    ##
    - name: EZA
      block:
        - name: Install GNU Privacy Guard
          become: true
          ansible.builtin.apt:
            name: gpg

        - name: Make directory for APT keyrings
          become: true
          ansible.builtin.file:
            path: /etc/apt/keyrings
            state: directory
            mode: u=rwX,go=rX

        - name: Is encryption key for eza Debian repository installed?
          ansible.builtin.stat:
            path: /etc/apt/keyrings/gierens.gpg
          register: werkstatt_stat_eza_key

        - name: Download armoured ASCII file for eza Debian repository
          when: not werkstatt_stat_eza_key.stat.exists
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
            dest: /tmp/eza-deb.asc
            mode: u=rw,go=r

        - name: Install encryption key for eza Debian repository
          become: true
          ansible.builtin.command:
            chdir: /tmp
            cmd: gpg --dearmor -o /etc/apt/keyrings/gierens.gpg eza-deb.asc
            creates: /etc/apt/keyrings/gierens.gpg

        - name: Delete armoured ASCII file for eza Debian repository
          ansible.builtin.file:
            path: /tmp/eza-deb.asc
            state: absent

        - name: Create APT sources list file for eza Debian repository
          become: true
          ansible.builtin.copy:
            content: ""
            dest: /etc/apt/sources.list.d/gierens.list
            force: false
            mode: u=rw,go=r

        - name: Add eza Debian repository to APT sources
          become: true
          ansible.builtin.lineinfile:
            path: /etc/apt/sources.list.d/gierens.list
            line: "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main"

        - name: Install eza
          become: yes
          ansible.builtin.apt:
            package: eza
            update_cache: true

        - name: Add bash aliases for eza
          vars:
            bash_aliases_to_add:
              l: eza --icons
              ls: eza --icons
              la: eza --all --icons
              ll: eza --long --icons --git
              lla: eza --long --all --icons --git
              llt: eza --long --tree --icons --git
              llta: eza --long --tree --all --icons --git
              lt: eza --tree --icons
              lta: eza --tree --all --icons
          ansible.builtin.include_tasks: ../tasks/bash_add_aliases.yml

    ##
    # bat is a cat clone with wings.
    #
    # @see  {@link https://github.com/sharkdp/bat}
    ##
    - name: BAT
      become: yes
      ansible.builtin.apt:
        deb: https://github.com/sharkdp/bat/releases/download/v0.24.0/bat-musl_0.24.0_amd64.deb

    ##
    # fd is a simple, fast and user-friendly alternative to 'find'.
    #
    # @see  {@link https://github.com/sharkdp/fd}
    ##
    - name: FD
      become: yes
      ansible.builtin.apt:
        deb: https://github.com/sharkdp/fd/releases/download/v9.0.0/fd-musl_9.0.0_amd64.deb

    ##
    # fzf is a command-line fuzzy finder.
    #
    # @see  {@link https://github.com/junegunn/fzf}
    ##
    - name: FZF
      block:
        - name: Make directory for fzf
          become: true
          ansible.builtin.file:
            path: /opt/fzf
            state: directory
            mode: u=rwX,go=rX

        - name: Clone source code repository of fzf
          become: true
          ansible.builtin.git:
            repo: https://github.com/junegunn/fzf.git
            dest: /opt/fzf
            version: 0.49.0

        - name: Install fzf
          become: true
          ansible.builtin.shell:
            executable: /usr/bin/bash
            chdir: /opt/fzf
            cmd: set -o pipefail && echo y | ./install --no-bash
            creates: /opt/fzf/bin/fzf

        - name: Add fzf commands directory to executable path
          vars:
            bash_paths_to_add:
              - /opt/fzf/bin
          ansible.builtin.include_tasks: ../tasks/bash_add_paths.yml

        - name: Integrate fzf with bash
          vars:
            bash_plugins_to_add:
              - eval "$(fzf --bash)"
          ansible.builtin.include_tasks: ../tasks/bash_add_plugins.yml

    ##
    # ripgrep is a faster grep
    #
    # @see  {@link https://github.com/BurntSushi/ripgrep}
    ##
    - name: RIPGREP
      block:
        - name: Create directory for ripgrep source code
          become: true
          ansible.builtin.file:
            path: /opt/ripgrep
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: u=rwX,go=rX

        - name: Clone ripgrep source code repository
          ansible.builtin.git:
            repo: https://github.com/BurntSushi/ripgrep
            dest: /opt/ripgrep
            version: 14.1.0
          register: werkstatt_clone_ripgrep

        - name: Compile then install ripgrep # noqa no-handler
          when: werkstatt_clone_ripgrep.changed
          ansible.builtin.command:
            chdir: /opt/ripgrep
            cmd: "{{ werkstatt_cargo }} install --path . --features pcre2"
          changed_when: true

    ##
    # bottom, run with command `btm`, is a superior top.
    #
    # @see  {@link https://github.com/ClementTsang/bottom}
    ##
    - name: BOTTOM
      become: true
      vars:
        werkstatt_bottom_version: 0.9.6
      ansible.builtin.apt:
        deb: https://github.com/ClementTsang/bottom/releases/download/{{ werkstatt_bottom_version }}/bottom_{{ werkstatt_bottom_version }}_amd64.deb

    ##
    # httpie is a superior HTTP client.
    #
    # @see  {@link https://www.httpie.io}
    ##
    - name: HTTPIE
      vars:
        pipx_app_to_install: httpie
      ansible.builtin.include_tasks: ../tasks/pipx_install_app.yml

##
# gdu is a fast disk usage analyzer with a console interface, written in
# Go.
#
# @see  {@link https://github.com/dundee/gdu}
##
- name: GDU
  hosts: all

  vars:
    werkstatt_gdu_version: v5.27.0

  tasks:
    - name: Is gdu already installed?
      ansible.builtin.stat:
        path: /usr/local/bin/gdu
      register: werkstatt_stat_gdu

    - name: Obtain current gdu version
      when: werkstatt_stat_gdu.stat.exists
      ansible.builtin.shell:
        executable: /usr/bin/bash
        cmd: set -o pipefail && gdu --version | head -n1 | sed 's/Version:\s\+//'
      changed_when: false
      register: werkstatt_current_gdu_version

    - name: Is gdu version outdated?
      ansible.builtin.set_fact:
        werkstatt_is_gdu_outdated: "{{
          not werkstatt_stat_gdu.stat.exists
          or
          not (werkstatt_current_gdu_version.stdout == werkstatt_gdu_version) }}"

    - name: Download, extract, then install gdu
      when: werkstatt_is_gdu_outdated
      block:
        - name: Download gdu archive
          ansible.builtin.get_url:
            url: https://github.com/dundee/gdu/releases/download/{{ werkstatt_gdu_version }}/gdu_linux_amd64.tgz
            dest: /tmp/gdu_linux_amd64.tgz
            mode: u=rw,go=r

        - name: Extract gdu archive
          ansible.builtin.unarchive:
            src: /tmp/gdu_linux_amd64.tgz
            remote_src: true
            dest: /tmp/

        - name: Install gdu archive
          become: true
          ansible.builtin.copy:
            src: /tmp/gdu_linux_amd64
            remote_src: true
            dest: /usr/local/bin/gdu
            mode: u=rwx,go=rx

    - name: Delete gdu archive
      ansible.builtin.file:
        path: /tmp/gdu_linux_amd64.tgz
        state: absent

    - name: Delete gdu extracted file
      ansible.builtin.file:
        path: /tmp/gdu_linux_amd64
        state: absent
