# This file is part of Werkstatt.
#
# Werkstatt is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Werkstatt is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# Werkstatt. If not, see <https://www.gnu.org/licenses/>.

##
# Ansible playbook that installs tools for the Go programming language.
#
# @see        {@link https://go.dev} The Go Programming Language
# @author     Geoffrey Bernardo van Wyk <geoffrey@vanwyk.biz>
# @copyright  2024 Geoffrey Bernardo van Wyk {@link https://geoffreyvanwyk.dev}
# @license    {@link http://www.gnu.org/copyleft/gpl.html} GNU GPL v3 or later
###
---
- name: Install Go programming language
  hosts: all

  vars:
    werkstatt_go_version: "1.22.1"

  tasks:
    - name: Is Go already installed?
      ansible.builtin.stat:
        path: /usr/local/go/VERSION
      register: werkstatt_stat_go_version

    - name: Display current Go version
      when: werkstatt_stat_go_version.stat.exists
      ansible.builtin.shell:
        executable: /usr/bin/bash
        cmd: set -o pipefail && head -n1 < /usr/local/go/VERSION | sed 's/go//'
      register: werkstatt_display_current_go_version
      changed_when: false

    - name: Is Go version outdated?
      ansible.builtin.set_fact:
        werkstatt_is_go_outdated: "{{
          not werkstatt_stat_go_version.stat.exists
          or
          not (werkstatt_display_current_go_version.stdout == werkstatt_go_version) }}"

    - name: Download, extract, then install Go
      when: werkstatt_is_go_outdated
      block:
        - name: Download new Go version
          ansible.builtin.get_url:
            url: https://go.dev/dl/go{{ werkstatt_go_version }}.linux-amd64.tar.gz
            dest: /tmp
            mode: u=rw,go=r

        - name: Remove existing Go directory
          ansible.builtin.file:
            path: /usr/local/go
            state: absent

        - name: Extract & Install new Go version
          become: true
          ansible.builtin.unarchive:
            src: /tmp/go{{ werkstatt_go_version }}.linux-amd64.tar.gz
            remote_src: true
            dest: /usr/local
            mode: u=rwX,go=rX

    - name: Remove downloaded Go archive
      ansible.builtin.file:
        path: /tmp/go{{ werkstatt_go_version }}.linux-amd64.tar.gz
        state: absent
